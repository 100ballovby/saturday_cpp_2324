#include <iostream>
#include <vector>
#include <string>
#include <iterator>  // добавить заголовочный файл iterator
using namespace std;

void iterators_basics() {
    int array[7] { 0, 1, 2, 3, 4, 5, 6 };
    auto begin { &array[0] };  // ставлю указатель на первый элемент массива
    auto end { begin + size(array) };
    // int *end2 { &array[size(array)] }; <- здесь вы обращаетесь к элементу массива с индексом 7, а такого нет
    // ставлю указатель на место, следующее за последним элементом массива

    // цикл for с указателем
    for (auto ptr { begin }; ptr != end; ptr++) {  // инкремент нужен для перехода к следующему элементу
        cout << *ptr << ' ';
    }
}

void iterators_begin_end() {
    vector<int> array { 0, 1, 2, 3, 4, 5, 6 };

    // попрошу массив указать начальную и конечную точки самостоятельно (с помощью функций)
    auto begin { array.begin() };
    auto end { array.end() };

    // цикл for с указателем
    for (auto ptr { begin }; ptr != end; ptr++) {  // инкремент нужен для перехода к следующему элементу
        cout << *ptr << ' ';
    }
}

void iterators_types() {
    int array[] { 0, 1, 2, 3, 4, 5, 6 };

    // попрошу массив указать начальную и конечную точки самостоятельно (с помощью функций)
    auto begin { std::begin(array) };
    auto end { std::end(array) };

    // цикл for с указателем
    for (auto ptr { begin }; ptr != end; ptr++) {  // инкремент нужен для перехода к следующему элементу
        cout << *ptr << ' ';
    }

    /*
     Думать о типах итераторов не нужно. Важно понимать, что он
     берет всю работу по перемещению по массиву (или другому контейнеру)
     на себя. Вам нужно знать только 4 вещи:
     1. Начальная точка (begin)
     2. Конечная точка (end)
     3. Оператор инкремент (++ или --) для перемещения итератора к следующему элементу
     4. Оператор разыменовывания (*) для получения значения элемента
     */
}

void range_for() {
    int array[] { 0, 1, 2, 3, 4, 5, 6 };

    // попрошу массив указать начальную и конечную точки самостоятельно (с помощью функций)
    auto begin { std::begin(array) };
    auto end { std::end(array) };

    // цикл for с явным указанием диапазона вызывает begin и end самостоятельно
    for (int i : array) {
        cout <<  i << ' ';
    }
}
